(define read-stream (cons-stream read read-stream))
(define (make-input-stream)
	(let ((x (cons-stream the-empty-stream
												(stream-map (lambda (read-func) (read-func)) read-stream)))
				(i 0))
		(define (next)
			(set! i (+ i 1))
			(stream-ref x i))
		(define (current)
			(stream-ref x i))
		(define (dispatch method)
			(cond ((eq? method 'next) next)
						((eq? method 'current) current)
						(else (error "Unsupported method" method))))
		dispatch))

(define (next input-stream)
	((input-stream 'next)))
(define (current input-stream)
	((input-stream 'current)))
